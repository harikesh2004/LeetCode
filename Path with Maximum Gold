class Solution:
    def getMaximumGold(self, grid: List[List[int]]) -> int:
        def backtrack(row, col):
            if row < 0 or row >= len(grid) or col < 0 or col >= len(grid[0]) or grid[row][col] == 0:
                return 0
            
            gold = grid[row][col]
            grid[row][col] = 0
            
            max_gold = 0
            for dr, dc in [(0, 1), (0, -1), (1, 0), (-1, 0)]:
                max_gold = max(max_gold, backtrack(row + dr, col + dc))
            
            grid[row][col] = gold
            
            return max_gold + gold
        
        max_gold = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] != 0:
                    max_gold = max(max_gold, backtrack(i, j))
        
        return max_gold
